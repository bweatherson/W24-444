---
title: 'Exam Prep'
author: 'Phil 444'
date: 'April 12, 2024'
execute:
  warning: false
  message: false
  cache: true
format:
    html:
      toc: false
      mainfont: SF Pro Rounded
    pdf: 
      format: scrreprt
      keep-tex: true
      geometry:
        - top=20mm
        - left=25mm
        - heightrounded
      mainfont: Scala Pro
      sansfont: Scala Sans Pro
      mainfontoptions: Scale = MatchLowercase
      fontsize: 12pt
      linkcolor: black
      link-citations: true
---

- The actual exam will be 6 questions taken from the questions below.
- The numbers in the numerical questions will be changed, but the wording won't be.
- For any question asking for a verbal answer (e.g., explain this notion, or this constraint), you should answer in about **250** words. These are _short answer_ questions, not essays, and the aim is to either (a) simply describe a concept or idea, or (b) present one reason for or against some notion. Don't try to write a five paragraph essay for each one!

## Questions {-}

1. Briefly describe the difference between what Lackey calls "inflationary" and "deflationary" accounts of group belief, and give an example of each.

Deflationary accounts say that group beliefs are just a function of what individuals in the group believe. E.g., the group believes p just in case a majority of the members believe it.

Inflationary accounts say that other things than the beliefs of the group can matter to belief. E.g., the group believes p just in case someone in the group has evidence e, and everyone in the group thinks e is excellent evidence for p.
 
2. Explain the Conditionalisation constraint in Russell, Hawthorne and Buchak's paper _Groupthink_.

The constraint says that the following two operations should have the same result.

A.  Combine two opinions into a group opinion, then update on some evidence.
B.  Have each member of the group update on that evidence, then combine the two updated individual opinions into an updated group opinion.

3. In a local election, with 100 voters, the voters have the following preferences. 45 people rank the candidates ADBC (i.e., A first, D second, B third, C fourth); 25 rank them BCDA; 20 rank them DABC; 10 rank them CDBA. Who would win if the voters vote sincerely, and the city uses first-past-the-post voting? Who would win if the voters vote sincerely, and the city uses ranked choice (i.e., alternate vote) voting? Very briefly (in a couple of sentences), which verdict do you think better reflects the will of the voters?

In first-past-the-post, A gets 45, B gets 25, D gets 20, and C gets 10, so A wins because 45 is largest.

In ranked choice, no one has a majority (i.e., 51 votes), so we eliminate the person with the fewest votes. That's C, and all 10 of their voters had D as second preference, so those 10 votes get added to D. Now it's A on 45, B on 25, and D on 30 (the 20 original, and 10 new). Still no one has a majority, so B gets eliminated. Each vote for B gets moved to the remaining candidate who was most preferred, and in all 25 cases that's D. So now D has 55 votes and is the winner.

Either answer for the last question seems fine, since neither system here is great. D does not have wide support - only 30% of voters even have them in the top 2. On the other hand, a majority of the voters have A outright last, and it is odd to have the worst possible option for 55% win the election.

4. State Arrow's **Independence of Irrelevant Alternatives** condition.

A social choice function takes the preferences of the voters as input, and returns a social preference ordering as output.

IIA says that if you change the voters' preferences, but do not change how any voter thinks about the relative position of A and B, then the social preference ordering of A and B should not change. That is, if originally A was ranked above B in the output, then the only way that can change is if some voter changes their mind about the relative ordering of A and B. It isn't enough if, for instance, some voters who always had B above A change their mind about whether B or C is outright best.

5. Describe an example where Sen's Condition L (Liberalism) and Condition P (Pareto) conflict.

A and B each have the following preferences about bedroom color.

- The best outcome is that their bedroom is pink, and the other person's is blue.
- The second best outcome is that both bedrooms are blue.
- The third best outcome is that both bedrooms are pink.
- The worst outcome is that their bedroom is blue, and the other bedroom is pink.

Each person prefers having a pink bedroom to a blue bedroom, holding fixed what the other person does. So if L says that people choose their own bedroom color, that means they'll choose pink. But that means we'll end up with the third best outcome; they would both prefer a world where both bedrooms are blue.

6. Consider an Axelrod-style Prisoners Dilemma tournament with just the following three strategies: Tit-for-Tat (i.e., C at move one, then do whatever the other person did last time); Grim Trigger (i.e., C until the other person plays D, then D forever); and a strategy that plays D until the other person plays D, then C forever. Each will play 100 rounds against the other two. The payoffs each round are (as normal), 5 points for playing D against C, 3 points for playing C against C, 1 point for playing D against D, 0 points for playing C against D. How many points over the 200 games (i.e., 100 rounds against 2 opponents) will each of them end up with?

Call the strategies TFT, GT, and Test.

TFT vs GT: Both get 300 points, since it's all C all the way.   \\
TFT vs Test: Round 1, TFT plays C, Test plays D, so it's 0-5. Round 2, TFT plays D, Test plays D, so it's 1-1. Round 3, TFT plays D, Test plays C, so it's 5-0. So far the score is 6-6. After that they play C every round, so it ends up 297-297.   \\
GT vs Test: Round 1, GT plays C, Test plays D, so it's 0-5. Round 2, GT plays D, Test plays D, so it's 1-1. After that, GT plays D, Test plays C, so it's 0-5 for 98 more rounds. So GT gets 491 points, and Test gets 6 points.

Final scores: TFT 597, GT 791, Test 303.

7. Describe an example of a **focal point** in Schelling's sense.

A coordination game is a game where the highest priority of each player is to do what the other(s) do, i.e., to coordinate. A focal point of a game like this is a solution that jumps out at people as being one that others will naturally latch on to. For example, if a group knew just that we were all in Chicago, and wanted to meet up, heading to the Bean would make sense; it's a focal point meaning that it's a solution to a problem like this that people will naturally gravitate towards, and do so in the (rational) belief that others will do so too.

8. What is the difference between weak dominance and strict dominance? Describe an example where the two notions come apart.

Option A strictly dominates B if it has a higher return whatever the other player does.

Option A weakly dominates B if it never has a lower return than B, and sometimes has a higher return.

In the game below, Up weakly, but not strongly, dominates Down.

|     |   Left   |    Right    |
|:---:|:--------:|:-----------:|
| Up  |   1,1    |     1,0     |
| Down |  0,0    |     1,1     |

9. In @tbl-dom, what will be the result if both players use iterated deletion of strictly dominated strategies to decide what to do? (In each cell, Row's payouts are first, and Column's are second.)



10. In @fig-back, what will be the result if all players uses backward induction to solve the problem? (At each terminal node, the payouts are player 1's, then player 2's, then player 3's. Each player moves once; first player 1, then player 2, then player 3.)
11. In @fig-signal, describe a separating equilbrium of the game.
12. What is the human capital theory of the explanation of the college wage premium? Describe one objection to it. (You do not have to answer the objection.)

|      |   L  |   C   |   R   |
|:----:|:----:|:-----:|:-----:|
|   U  | 1,1  | 2,0   | 2,2   |
|   M  | 0,3  | 1,5   | 4,4   |
|   D  |  2,4 | 3,6   | 3,0   |

: Game table for Q9 {#tbl-dom}


```{r engine="tikz"}
#| fig-format: png
#| echo: false
#| label: fig-back
#| fig.cap: "Tree for Q10"


\usetikzlibrary{calc}

\begin{tikzpicture}
  \tikzset{
    % Three node styles for game trees: solid and hollow and square
      solid node/.style={circle,draw,inner sep=1.5,fill=black},
      hollow node/.style={circle,draw,inner sep=1.5},
      square node/.style={rectangle,draw, inner sep = 1, fill = black}
      }

  % Specify spacing for each level of the tree
  \tikzstyle{level 1}=[level distance=15mm,sibling distance=40mm]
  \tikzstyle{level 2}=[level distance=15mm,sibling distance=20mm]
  \tikzstyle{level 3}=[level distance=15mm,sibling distance=10mm]

  \node[hollow node,label=above:{P1}]{}
    child { node [solid node,label=left:{P2}] {}
      child { node [solid node,label=left:{P3}] {}
        child { node [] {3,1,1}
            edge from parent
            node[left]{L}}
        child { node [] {4,0,0}
            edge from parent
            node[right]{R}}
        edge from parent
            node[left]{L}
        }
      child { node [solid node,label=right:{P3}] {}
        child { node [] {1,3,0}
            edge from parent
            node[left]{L}}
        child { node [] {1,0,1}
            edge from parent
            node[right]{R}}
        edge from parent
            node[right]{R}
        }        
      edge from parent
        node[left]{L}
    }
    child { node [solid node,label=right:{P2}] {}
      child { node [solid node,label=left:{P3}] {}
        child { node [] {1,0,0}
            edge from parent
            node[left]{L}}
        child { node [] {2,1,1}
            edge from parent
            node[right]{R}}
        edge from parent
            node[left]{L}
        }
      child { node [solid node,label=right:{P3}] {}
        child { node [] {0,2,1}
            edge from parent
            node[left]{L}}
        child { node [] {1,0,2}
            edge from parent
            node[right]{R}}
        edge from parent
            node[right]{R}
        }        
      edge from parent
        node[right]{R}
    }
    
    ;
    \end{tikzpicture}
```

```{r engine='tikz'}
#| label: fig-signal
#| fig.ext: 'png'
#| cache: TRUE
#| echo: FALSE
#| fig.cap: "Tree for Q11"

\usetikzlibrary{calc}

\begin{tikzpicture}[scale=1.4,font=\footnotesize]
\tikzset{
% Two node styles for game trees: solid and hollow
solid node/.style={circle,draw,inner sep=1.5,fill=black},
hollow node/.style={circle,draw,inner sep=1.5},
square node/.style={rectangle,draw, inner sep = 1, fill = black}
}

% Specify spacing for each level of the tree
\tikzstyle{level 1}=[level distance=12mm,sibling distance=25mm]
\tikzstyle{level 2}=[level distance=15mm,sibling distance=15mm]
\tikzstyle{level 3}=[level distance=18mm,sibling distance=11mm]

% The Tree
\node(0)[hollow node,label=right:{Nature}]{}
child[grow=up]{node[solid node,label=above:{Proposer}] {}
child[grow=left]{node(1)[solid node]{}
child{node[square node,label=left:{1,2}]{} edge from parent node [above]{Up}}
child{node[square node,label=left:{1,0}]{} edge from parent node [below]{Down}}
edge from parent node [below]{L}
}
child[grow=right]{node(3)[solid node]{}
child{node[square node,label=right:{0,0}]{} edge from parent node [below]{Down}}
child{node[square node,label=right:{2,2}]{} edge from parent node [above]{Up}}
edge from parent node [below]{R}
}
edge from parent node [left, align=center]{A \\ 2/3}
}
child[grow=down]{node[solid node,label=below:{Proposer}] {}
child[grow=left]{node(2)[solid node]{}
child{node[square node,label=left:{2,0}]{} edge from parent node [above]{Up}}
child{node[square node,label=left:{0,2}]{} edge from parent node [below]{Down}}
edge from parent node [above]{L}
}
child[grow=right]{node(4)[solid node]{}
child{node[square node,label=right:{3,2}]{} edge from parent node [below]{Up}}
child{node[square node,label=right:{1,0}]{} edge from parent node [above]{Down}}
edge from parent node [above]{R}
}
edge from parent node [left,align=center]{B \\ 1/3}
};

% information set
\draw[dashed,rounded corners=10]($(1) + (-.55,.45)$)rectangle($(2) +(.55,-.45)$);
\draw[dashed,rounded corners=10]($(3) + (-.55,.45)$)rectangle($(4) +(.55,-.45)$);
% specify mover at 2nd information set
\node at ($(1)!.5!(2)$) {Respond};
\node at ($(3)!.5!(4)$) {Respond};
\end{tikzpicture}
```
